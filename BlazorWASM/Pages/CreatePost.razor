@page "/CreatePost"
@using global::Shared.Models
@using System.Security.Claims
@using global::Shared.DTOs
@using HttpClients.ClientInterfaces
@inject IPostService postService
@inject NavigationManager navMgr

<div class="card">
    @if (users == null)
    {
        <label>Loading users...</label>
    }
    else if (!users.Any())
    {
        <label>No users, you cannot create a Todo</label>
    }
    else
    {
        <h3>Create Post</h3>
        <div class="form-group field">
            <label>Title:</label>
            <input type="text" @bind="todoTitle"/>
        </div>
        <div class="form-group field">
            <label>Desc:</label>
            <input type="text" @bind="todoDesc"/>
        </div>
        <div class="button-row">
            @if (!string.IsNullOrEmpty(msg))
            {
                <label style="color: red">@msg</label>
            }
            <button @onclick="Create" class="acceptbtn">Create</button>
        </div>
    }
</div>

<Modal ShowModal="showModal">
    <p>You have successfully added a new Post. You should be very proud of yourself!</p>
    <button @onclick="@Proceed">Wonderful</button>
</Modal>

@code {
    private IEnumerable<User>? users;
    private int selectedUserId;
    private string todoTitle = "";
    private string todoDesc = "";

    private string msg = "";

    private bool showModal;

    private string? name;
    private IEnumerable<Claim>? userClaims;
    private bool isLoggedIn;

    protected override async Task OnInitializedAsync()
    {
        msg = "";
    }

    private async Task Create()
    {
        msg = "";
        foreach (var user in users)
        {
            if (user.userName.Equals(name))
                selectedUserId = user.idUser;
            else
            {
                msg = "need login.";
                return;
            }
        }
        try
        {
            PostCreationDTO dto = new((int)selectedUserId, todoTitle);
            await postService.Create(dto);
            showModal = true;
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            msg = e.Message;
        }
    }

    private void Proceed()
    {
        showModal = false;
        navMgr.NavigateTo("/ViewPosts");
    }

}